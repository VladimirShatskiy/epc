from django.contrib.auth.models import User
from telebot.types import Message, ReplyKeyboardRemove
from botapp.keyboards.contact import request_contact
from botapp.states.contact_info import UserInfo
from botapp.utils.message import message_add_to_sql, message_delete

from loader import bot

from manage import logger
from shop_bot.settings import DEBUG
from shopapp.models import Profile


@bot.message_handler(commands=['survey'])
def survey(message: Message) -> None:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    :param message:
    :return: None
    """
    if DEBUG:
        logger.info("–Ω–∞—á–∞–ª–æ @bot.message_handler(commands=['survey'])")
    bot.set_state(message.from_user.id, UserInfo.phone_number)
    message_add_to_sql(
        bot.send_message(message.from_user.id, f'{message.from_user.full_name}\n'
                                               f'–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã, –ø—Ä–æ—Å—å–±–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è\n'
                                               f'üëáüëáüëá   –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É   üëáüëáüëá',
                         reply_markup=request_contact())
    )

    if DEBUG:
        logger.info("–∫–æ–Ω–µ—Ü @bot.message_handler(commands=['survey'])")


@bot.message_handler(content_types=['contact'], state=UserInfo.phone_number)
@logger.catch
def get_contact(message: Message) -> None:
    """
    –û–ø—Ä–æ—Å, –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏–µ –æ–ø—Ä–æ—Å–∞
    :param message:
    :return:
    """
    if DEBUG:
        logger.info("–Ω–∞—á–∞–ª–æ @bot.message_handler(content_types=['contact'], state=UserInfo.phone_number)")

    if message.content_type == 'contact':
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['phone_number'] = message.contact.phone_number
            data['first_name'] = message.contact.first_name

            bot.delete_message(message.chat.id, message.message_id)
            message_delete(message.from_user.id)

            message_add_to_sql(
                bot.send_message(message.from_user.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ üëç\n'
                                                       'üëá –æ—Ç–∫—Ä–æ–π—Ç–µ –º–µ–Ω—é',
                                 reply_markup=ReplyKeyboardRemove())
            )
            bot.set_state(message.from_user.id, None)
            userid = (message.from_user.id,)

            User.objects.get_or_create(username=userid[0], first_name=data['first_name'])
            user = User.objects.get(username=userid[0])
            profile = Profile.objects.get(user=user)
            profile.phone = str(data['phone_number'])
            profile.telegram = userid[0]
            profile.save()

    elif message.text.lower() == '–Ω–µ—Ç':
        message_add_to_sql(
            bot.send_message(message.from_user.id, "–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã –ø—Ä–µ—Ä–≤–∞–Ω–æ\n"
                                                   "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É üò∞", reply_markup=ReplyKeyboardRemove())
        )
        bot.set_state(message.from_user.id, None)
    else:

        message_add_to_sql(
            bot.send_message(message.from_user.id, "–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É\n"
                                                   "–ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ '–Ω–µ—Ç' –¥–ª—è –æ—Ç–º–µ–Ω—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\n"
                                                   "üëáüëáüëá –∫–Ω–æ–ø–∫–∞ –Ω–∏–∂–µ üëáüëáüëá")
        )

    if DEBUG:
        logger.info("–∫–æ–Ω–µ—Ü @bot.message_handler(content_types=['contact'], state=UserInfo.phone_number)")
